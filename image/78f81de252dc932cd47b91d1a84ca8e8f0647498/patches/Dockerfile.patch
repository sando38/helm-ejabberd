diff --git a/.github/container/Dockerfile b/.github/container/Dockerfile
index adbcdb98d..05ba50597 100644
--- a/.github/container/Dockerfile
+++ b/.github/container/Dockerfile
@@ -5,6 +5,7 @@ ARG ELIXIR_VSN='1.14.4'
 ## specifc ARGs for METHOD='package'
 ARG ALPINE_VSN='3.17'
 ## general ARGs
+ARG VARIANT='hardened'
 ARG UID='9000'
 ARG USER='ejabberd'
 ARG HOME="opt/$USER"
@@ -21,6 +22,7 @@ RUN apk -U add --no-cache \
         automake \
         bash \
         build-base \
+        cargo \
         curl \
         expat-dev \
         file \
@@ -48,7 +50,20 @@ RUN mix local.hex --force \
 ARG BUILD_DIR
 COPY / $BUILD_DIR/
 
+WORKDIR $BUILD_DIR/.ejabberd-modules/sources/ejabberd-contrib
+
+# include some ejabberd contribution modules which may be nice for clusters
+RUN git clone https://github.com/mjohnson9/ejabberd-contrib --branch fix/mod_s3_upload-host-no-match --depth 1 . \
+    && install mod_http_redirect/src/*.erl $BUILD_DIR/src \
+    && install mod_s3_upload/src/*.erl $BUILD_DIR/src \
+    && install mod_s3_upload/include/*.hrl $BUILD_DIR/include \
+    && install mod_ecaptcha/src/*.erl $BUILD_DIR/src \
+    && install ejabberd_auth_http/src/*.erl $BUILD_DIR/src \
+    && install mod_captcha_rust/lib/*.ex $BUILD_DIR/lib \
+    && rm -rf mod_captcha_rust mod_ecaptcha mod_http_redirect mod_s3_upload
+
 WORKDIR $BUILD_DIR
+
 RUN mv .github/container/ejabberdctl.template . \
     && ./autogen.sh \
     && ./configure --with-rebar=mix --enable-all \
@@ -67,8 +82,8 @@ RUN cp -p $BUILD_DIR/tools/captcha*.sh $HOME-$VERSION/lib
 RUN find "$HOME-$VERSION/bin" -name 'ejabberd' -delete \
     && find "$HOME-$VERSION/releases" -name 'COOKIE' -delete
 
-RUN wget -O "$HOME/conf/cacert.pem" 'https://curl.se/ca/cacert.pem' \
-    && sed -i '/^loglevel:/a \ \
+ADD https://curl.se/ca/cacert.pem $HOME/conf/cacert.pem
+RUN sed -i '/^loglevel:/a \ \
         \nca_file: /opt/ejabberd/conf/cacert.pem \
         \ncertfiles: \
         \n  - /opt/ejabberd/conf/server.pem' "$HOME/conf/ejabberd.yml"
@@ -117,16 +132,7 @@ RUN export PEM=$HOME/conf/server.pem \
             -subj "/CN=localhost"
 
 RUN home_root_dir=$(echo $HOME | sed 's|\(.*\)/.*|\1 |') \
-    && setcap 'cap_net_bind_service=+ep' $(find $home_root_dir -name beam.smp) \
-    && echo -e \
-        "#!/bin/sh \
-        \n[ -z \$ERLANG_NODE_ARG ] && export ERLANG_NODE_ARG=ejabberd@localhost \
-        \nexport CONFIG_DIR=/$HOME/conf \
-        \nexport LOGS_DIR=/$HOME/logs \
-        \nexport SPOOL_DIR=/$HOME/database \
-        \nexec /$(find $home_root_dir -name ejabberdctl) \"\$@\"" \
-            > usr/local/bin/ejabberdctl \
-    && chmod +x usr/local/bin/* \
+    #&& setcap 'cap_net_bind_service=+ep' $(find $home_root_dir -name beam.smp) \
     && scanelf --needed --nobanner --format '%n#p' --recursive $home_root_dir \
         | tr ',' '\n' \
         | sort -u \
@@ -134,6 +140,8 @@ RUN home_root_dir=$(echo $HOME | sed 's|\(.*\)/.*|\1 |') \
         | sed -e "s|so:libc.so|so:libc.musl-$(uname -m).so.1|" \
             > /tmp/runDeps
 
+COPY k8s-scripts/* usr/local/bin/
+
 ARG UID
 RUN chown -R $UID:$UID $HOME
 
@@ -168,12 +176,39 @@ RUN addgroup $USER -g $UID \
 ################################################################################
 #' Build together production image
 FROM scratch AS prod
-ARG USER
-ARG HOME
 
 COPY --from=runtime / /
 COPY --from=ejabberd /rootfs /
 
+################################################################################
+#' Remove unneccessary packages from runtime environment
+FROM runtime AS runtime-hardened
+# we need busybox' 'ash', which became a sub-package in alpine 3.17
+RUN check=$(printf "$(cat /etc/alpine-release)\n3.17" | sort -V | head -n1) \
+    && if [ "$check" = '3.17' ]; then sub='-binsh'; fi \
+    && apk add --no-cache \
+        busybox${sub}
+RUN apk del --repositories-file /dev/null \
+        alpine-baselayout \
+        alpine-keys \
+        apk-tools \
+        libc-utils \
+    && rm -rf /var/cache/apk /etc/apk /tmp \
+    && find /lib/apk/db -type f -not -name 'installed' -delete
+
+################################################################################
+#' Build together hardened production image
+FROM scratch AS hardened
+
+COPY --from=runtime-hardened / /
+COPY --from=ejabberd /rootfs /
+
+################################################################################
+#' Build together production image
+FROM ${VARIANT} AS final
+ARG USER
+ARG HOME
+
 HEALTHCHECK \
     --interval=1m \
     --timeout=5s \
@@ -186,5 +221,5 @@ USER $USER
 VOLUME ["/$HOME"]
 EXPOSE 1883 4369-4399 5210 5222 5269 5280 5443
 
-ENTRYPOINT ["/sbin/tini","--","ejabberdctl"]
-CMD ["foreground"]
+ENTRYPOINT ["/sbin/tini","--"]
+CMD ["run.sh"]
