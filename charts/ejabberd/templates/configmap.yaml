apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "ejabberd.fullname" . }}-config
  namespace: {{ template "ejabberd.namespace" . }}
  labels:
    helm-ejabberd/watcher: "true"
    {{- include "ejabberd.labels" $ | nindent 4 }}
  annotations:
    k8s-sidecar-target-directory: "conf"
data:
  inetrc: |-
    {lookup,["file","native"]}.
    {host,{127,0,0,1}, ["localhost","hostalias"]}.
    {file, resolv, "/etc/resolv.conf"}.
  modules-default.yml: |-
    modules:
      mod_adhoc: {}
      mod_admin_extra: {}
      mod_announce:
        access: announce
      mod_avatar: {}
      mod_blocking: {}
      mod_bosh: {}
      mod_caps: {}
      mod_carboncopy: {}
      mod_client_state: {}
      mod_configure: {}
      mod_disco: {}
      mod_fail2ban: {}
      mod_http_api: {}
      mod_http_upload:
        custom_headers:
          Access-Control-Allow-Headers: Content-Type
          Access-Control-Allow-Methods: GET,HEAD,PUT,OPTIONS
          Access-Control-Allow-Origin: https://@HOST@
        put_url: https://@HOST@:5443/upload
      mod_last: {}
      mod_mam:
        assume_mam_usage: true
        default: always
      mod_mqtt: {}
      mod_muc:
        access:
        - allow
        access_admin:
        - allow: admin
        access_create: muc_create
        access_mam:
        - allow
        access_persistent: muc_create
        default_room_options:
          mam: true
      mod_muc_admin: {}
      mod_offline:
        access_max_user_messages: max_user_offline_messages
      mod_ping: {}
      mod_privacy: {}
      mod_private: {}
      mod_proxy65:
        access: local
        max_connections: 5
      mod_pubsub:
        access_createnode: pubsub_createnode
        force_node_config:
          storage:bookmarks:
            access_model: whitelist
        plugins:
        - flat
        - pep
      mod_push: {}
      mod_push_keepalive: {}
      mod_register:
        ip_access: trusted_network
      mod_roster:
        versioning: true
      mod_s2s_dialback: {}
      mod_shared_roster: {}
      mod_stream_mgmt:
        resend_on_timeout: if_offline
      mod_stun_disco: {}
      mod_vcard: {}
      mod_vcard_xupdate: {}
      mod_version:
        show_os: false

  acl.yml: |-
    acl:
      local:
        user_regexp: ""
      loopback:
        ip:
        - 127.0.0.0/8
        - ::1/128

  api-permissions.yml: |-
    api_permissions:
      admin access:
        what:
        - '*'
        - '!stop'
        - '!start'
        who:
          access:
            allow:
            - acl: loopback
            - acl: admin
          oauth:
            access:
              allow:
              - acl: loopback
              - acl: admin
            scope: ejabberd:admin
      console commands:
        from:
        - ejabberd_ctl
        {{- if .Values.certFiles.sideCar.enabled }}
        - mod_http_api
        {{- end }}
        what: '*'
        who: all
      public commands:
        what:
        - status
        - connected_users_number
        who:
          ip: 127.0.0.1/8

  access-rules.yml: |-
    access_rules:
      announce:
        allow: admin
      c2s:
        allow: all
        deny: blocked
      configure:
        allow: admin
      local:
        allow: local
      muc_create:
        allow: local
      pubsub_createnode:
        allow: local
      trusted_network:
        allow: loopback

  shaper-rules.yml: |-
    shaper_rules:
      c2s_shaper:
        none: admin
        normal: all
      max_user_offline_messages:
        "100": all
        "5000": admin
      max_user_sessions: 10
      s2s_shaper: fast

  shaper.yml: |-
    shaper:
      fast: 100000
      normal:
        burst_size: 20000
        rate: 3000

  ejabberd.yml: |-
    hosts:
    {{- range $name := .Values.hosts }}
      - {{ $name }}
    {{- end }}
    acme:
      auto: false
    ca_file: /opt/ejabberd/cacert/cacert.pem
    certfiles:
    {{- range $name := .Values.certFiles.secretName }}
      - /opt/ejabberd/certs/{{ $name }}/*.pem
    {{- end }}

    {{- toYaml .Values.logging | nindent 4 }}

    define_macro:
    {{- toYaml .Values.defineMacro | nindent 6 }}

    {{- if .Values.listenGlobal }}
    {{- toYaml .Values.listenGlobal | nindent 4 }}
    {{- end }}

    listen:
    {{- if .Values.certFiles.sideCar.enabled }}
      -
        port: {{ default 5281 .Values.certFiles.sideCar.apiPort }}
        transport: "tcp"
        ip: '{{ default "127.0.0.1" .Values.certFiles.sideCar.apiAddress }}'
        module: ejabberd_http
        request_handlers:
          /api: mod_http_api
    {{- end }}
    {{- range $name, $config := .Values.listen }}
    {{- if $config }}
    {{- if $config.enabled }}
      -
        port: {{ default $config.port $config.containerPort }}
        transport: {{ default "TCP" $config.protocol | lower | quote }}
    {{- toYaml $config.options | nindent 8 }}
    {{- end }}
    {{- end }}
    {{- end }}

    {{- if .Values.acl }}
    acl:
    {{- toYaml .Values.acl | nindent 6 }}
    {{- else }}
    include_config_file:
      - /opt/ejabberd/conf/acl.yml
    {{- end }}

    {{- if .Values.accessRules }}
    access_rules:
    {{- toYaml .Values.accessRules | nindent 6 }}
    {{- else }}
    include_config_file:
      - /opt/ejabberd/conf/access-rules.yml
    {{- end }}

    {{- if .Values.apiPermissions }}
    api_permissions:
    {{- toYaml .Values.apiPermissions | nindent 6 }}
    {{- else }}
    include_config_file:
      - /opt/ejabberd/conf/api-permissions.yml
    {{- end }}

    {{- if .Values.shaper }}
    shaper:
    {{- toYaml .Values.shaper | nindent 6 }}
    {{- else }}
    include_config_file:
      - /opt/ejabberd/conf/shaper.yml
    {{- end }}

    {{- if .Values.shaperRules }}
    shaper_rules:
    {{- toYaml .Values.shaperRules | nindent 6 }}
    {{- else }}
    include_config_file:
      - /opt/ejabberd/conf/shaper-rules.yml
    {{- end }}

    {{- if .Values.authentification }}
    {{- toYaml .Values.authentification | nindent 4 }}
    {{- end }}

    {{- if .Values.ldap }}
    {{- toYaml .Values.ldap.config | nindent 4 }}
    {{- end }}

    {{- if .Values.sqlDatabase.enabled }}
    default_db: {{ default "mnesia" .Values.sqlDatabase.defaultDb | quote }}
    new_sql_schema: {{ default "false" .Values.sqlDatabase.newSqlSchema | quote }}
    {{- toYaml .Values.sqlDatabase.config | nindent 4 }}
    {{- end }}

    {{- if .Values.redis.enabled }}
    default_ram_db: {{ default "mnesia" .Values.redis.defaultRamDb | quote }}
    {{- toYaml .Values.redis.config | nindent 4 }}
    {{- end }}

    {{- if .Values.installContribModules }}
    {{- toYaml .Values.installContribModules | nindent 4 }}
    {{- end }}
    {{- if .Values.modules }}
    modules:
    {{- toYaml .Values.modules | nindent 6 }}
    {{- else }}
    include_config_file:
      - /opt/ejabberd/conf/modules-default.yml
    {{- end }}

    {{- if .Values.captcha }}
    {{- toYaml .Values.captcha | nindent 4 }}
    {{- end }}

    {{- if .Values.additonalConfigurationItems }}
    {{- toYaml .Values.additonalConfigurationItems | nindent 4 }}
    {{- end }}

